services:
  # pgvector database
  db:
    image: pgvector/pgvector:pg17
    restart: always
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ${DB_VOLUME}:/var/lib/postgresql/data
      - ./dataloader/schema:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 10s

  # postgres monitoring
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin

  # startup csv loader
  dataloader:
    container_name: feit-backend-dataloader
    build:
      context: ./dataloader
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      VERBOSE: false
    depends_on:
      db:
        condition: service_healthy

  # api
  api:
    container_name: feit-backend-api
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      MODE: ${MODE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
    ports:
      - "3000:80"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 20s

volumes:
  pgdata_test:
  pgdata_prod:
  pgadmin: